{
  "openapi": "3.0.1",
  "info": {
    "description": "API Gateway",
    "title": "API Gateway",
    "version": "2"
  },
  "externalDocs": {
    "description": "Api documention in the confluence",
    "url": "https://confluence.doclerholding.com/x/aSbED"
  },
  "servers": [
    {
      "url": "{protocol}://{branch}-{user}-api-gateway-livejasmin.{domain}/v2/{userType}",
      "description": "Development",
      "variables": {
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "https"
        },
        "branch": {
          "default": "master"
        },
        "user": {
          "default": "shared-dev"
        },
        "domain": {
          "default": "dhdevel2.com"
        },
        "userType": {
          "enum": [
            "guest",
            "free",
            "member"
          ],
          "default": "guest"
        }
      }
    },
    {
      "url": "{protocol}://{node}-api-gateway.dditsadn.com/v2/{userType}",
      "description": "staging",
      "variables": {
        "node": {
          "enum": [
            "lubet",
            "lukyl",
            "sgsin",
            "uslax",
            "usnyc"
          ],
          "default": "lubet"
        },
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "https"
        },
        "userType": {
          "enum": [
            "guest",
            "free",
            "member"
          ],
          "default": "guest"
        }
      }
    },
    {
      "url": "{protocol}://api-gateway.dditsadn.com/v2/{userType}",
      "description": "production",
      "variables": {
        "node": {
          "enum": [
            "lubet",
            "lukyl",
            "sgsin",
            "uslax",
            "usnyc"
          ],
          "default": "lubet"
        },
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "https"
        },
        "userType": {
          "enum": [
            "guest",
            "free",
            "member"
          ],
          "default": "guest"
        }
      }
    }
  ],
  "tags": [
    {
      "description": "Advertisement service",
      "name": "Advertisement"
    },
    {
      "description": "Favorite service",
      "name": "Favorite"
    }
  ],
  "paths": {
    "/announcement/announcements": {
      "get": {
        "summary": "Get a list of user-targeting advertisements.",
        "parameters": [
    
          {
            "name": "user",
            "in": "query",
            "description": "User information for targeting specific ads",
            "required": false,
            "style": "deepObject",
            "explode": true,
            "schema": {
              "type": "object",
              "properties": {
                "lastLoggedOnMemberType": {
                  "type": "string",
                  "enum": [
                    "free",
                    "paying",
                    "validated",
                    "none"
                  ]
                },
                "visitorId": {
                  "type": "string",
                  "format": "uuid",
                  "example": "abc123-def123-abc123abc123abc123abc123"
                },
                "luckyWheelRewardToken": {
                  "description": "A JWT string",
                  "type": "string",
                  "example": "abc123.abc123.abc123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "decription": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Determines the way it will be displayed. e.g. static, luckywheel, happyhour, etc."
                          },
                          "name": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object",
                            "additionalProperties": true,
                            "description": "Additional information related to the ad"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Advertisement"
        ]
      }
    },
    "/favorite/favorites": {
      "get": {
        "summary": "Get favorite performer list of member.",
        "parameters": [
         
          {
            "description": "Available fields and their operators: <dl> <dt>performerNick:<dt><dd>LIKE</dd> <dt>performerId:<dt><dd>!=</dd> </dl>",
            "in": "query",
            "name": "criteria[]",
            "required": false,
            "schema": {
              "type": "string",
              "example": [
                "performerNick,LIKE,perform",
                "performerId,!=,112233"
              ]
            }
          },
          {
            "description": "Maximum amount of results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 20
            }
          },
          {
            "description": "Offset to be applied to the result",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 20,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "decription": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "performerIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "example": 112233
                      }
                    },
                    "pagination": {
                      "required": false,
                      "description": "Pagination information",
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "required": true,
                          "example": 73
                        },
                        "limit": {
                          "type": "integer",
                          "required": false,
                          "example": 10
                        },
                        "offset": {
                          "type": "integer",
                          "required": false,
                          "example": 20
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Trying to access service as a guest."
          },
          "503": {
            "description": "Temporary internal server error."
          }
        },
        "tags": [
          "Favorite"
        ]
      }
    },
    "/performer/recommended": {
      "get": {
        "summary": "Get recommended performer for the member.",
        "parameters": [
          {
            "description": "Maximum amount of results",
            "in": "query",
            "name": "criteria",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "performerNick,LIKE,testing"
              }
            }
          },
          {
            "description": "Maximum amount of results",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 20
            }
          }
        ],
        "responses": {
          "200": {
            "decription": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "performerIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "example": 123
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Trying to access service as a guest."
          },
          "500": {
            "description": "Temporary internal server error."
          }
        },
        "tags": [
          "RecommendedPerformers"
        ]
      }
    },
    "/messenger/threads": {
      "get": {
        "summary": "Find available threads for the given member",
        "parameters": [
          {
            "description": "User Session identifier",
            "in": "query",
            "name": "session",
            "required": true,
            "schema": {
              "type": "string",
              "example": "m119d26947a55ebc917911228cree39f8"
            }
          },
          {
            "description": "Available fields and their operators: <dl> <dt>performerNick:<dt><dd>LIKE</dd> </dl>",
            "in": "query",
            "name": "criteria[]",
            "required": false,
            "schema": {
              "type": "string",
              "example": [
                "performerNick,LIKE,perform"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "decription": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 14981801
                          },
                          "unreadMessageCount": {

                          },
                          "lastMessageId": {
                            "type": "integer",
                            "example": 60029044
                          },
                          "participants": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 8050
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "member",
                                    "performer"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "example": 123
                    },
                    "totalUnreadCount": {
                      "type": "integer",
                      "example": 8
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Messenger"
        ]
      }
    },
    "/support-messenger/messages": {
      "get": {
        "summary": "Find support messages",
        "parameters": [
         
          {
            "description": "Maximum amount of results",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 20,
              "default": 15
            }
          },
          {
            "description": "Pagination id cursor.",
            "in": "query",
            "name": "lastId",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1234,
              "default": null
            }
          },
          {
            "description": "Reverse pagination direction",
            "in": "query",
            "name": "reverseDirection",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "decription": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 60029044
                          },
                          "sender": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 8050
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "member",
                                  "support"
                                ]
                              }
                            }
                          },
                          "content": {
                            "type": "string",
                            "example": "Hello mate!"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": 1572957710
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "SupportMessenger"
        ]
      },
      "patch": {
        "summary": "Patch support messages",
        "parameters": [
          
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": "integer",
              "example": [
                123,
                456,
                789
              ]
            }
          }
        ],
        "requestBody": {
          "description": "Patch body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "in": "body",
                    "name": "status",
                    "required": false,
                    "schema": {
                      "enum": [
                        "new",
                        "read"
                      ],
                      "example": "read"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "decription": "ok"
          }
        },
        "tags": [
          "SupportMessenger"
        ]
      }
    },
    "/story/recommended": {
      "get": {
        "parameters": [
       
          {
            "name": "excludeOwnerIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": "integer"
            }
          },
          {
            "name": "showTestModels",
            "in": "query",
            "required": false,
            "description": "A flag whether to show test models or not. NOT present in v2.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "storyId": {
                        "type": "integer",
                        "example": 123
                      },
                      "lastItem": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 112233
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": 1572957710
                          },
                          "duration": {
                            "type": "integer",
                            "example": 15
                          },
                          "durationFloat": {
                            "type": "number",
                            "format": "float",
                            "example": 12.345
                          },
                          "media": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "contentUrl": {
                                  "type": "string",
                                  "example": "//gallerydev.dditscdn.com/public/10/8ff945e1ffeff770a6d84948ca1122c2.mp4"
                                },
                                "dimension": {
                                  "type": "object",
                                  "properties": {
                                    "height": {
                                      "type": "integer",
                                      "example": 1024
                                    },
                                    "width": {
                                      "type": "integer",
                                      "example": 240
                                    }
                                  }
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "image",
                                    "video"
                                  ],
                                  "example": "video"
                                },
                                "isBlurred": {
                                  "type": "boolean",
                                  "example": false
                                }
                              }
                            }
                          },
                          "privacy": {
                            "type": "string",
                            "enum": [
                              "free",
                              "premium"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "image",
                              "video",
                              "note"
                            ],
                            "example": "video"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "example": "Dance"
                                }
                              }
                            }
                          },
                          "activatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": 1562054606
                          }
                        }
                      },
                      "performer": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "MSC Performer ID",
                            "example": 665544332211
                          },
                          "name": {
                            "type": "string",
                            "example": "ThePerformer"
                          },
                          "profilePictureUrl": {
                            "type": "string",
                            "example": "//example.com/picture.jpg"
                          }
                        }
                      }
                    }
                  },
                  "type": "array"
                }
              }
            },
            "description": "The recommended stories with performer details in the requested category."
          }
        },
        "tags": [
          "Story"
        ]
      }
    },
    "/story/story-item/last-seen": {
      "get": {
        "parameters": [
         
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "viewerId": {
                            "type": "integer"
                          },
                          "ownerId": {
                            "type": "integer"
                          },
                          "lastSeenItemType": {
                            "type": "string",
                            "enum": [
                              "image",
                              "video",
                              "note"
                            ],
                            "example": "video"
                          },
                          "lastSeenItemCreatedAt": {
                            "type": "string",
                            "format": "dateTime"
                          }
                        },
                        "required": [
                          "viewerId",
                          "ownerId",
                          "lastSeenItemType",
                          "lastSeenItemCreatedAt"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": "The last seen story items."
          }
        },
        "tags": [
          "Last seen story item"
        ]
      }
    },
    "/story/story-item/most-recent-view": {
      "put": {
        "description": "Save a single most recent story item view.",
        "tags": [
          "Most recent item view"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storyId": {
                    "type": "integer"
                  },
                  "ownerId": {
                    "type": "integer"
                  },
                  "itemType": {
                    "type": "string",
                    "enum": [
                      "image",
                      "video",
                      "note"
                    ],
                    "example": "video"
                  },
                  "itemId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "storyId",
                  "ownerId",
                  "itemType",
                  "itemId"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Most recent story item views are updated."
          }
        }
      }
    },
    "/story/story-item/most-recent-views": {
      "put": {
        "description": "Save multiple most recent story item views.",
        "tags": [
          "Most recent item views"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mostRecentItemViewList": {
                    "type": "object",
                    "properties": {
                      "ownerId": {
                        "type": "integer"
                      },
                      
                      "itemId": {
                        "type": "integer"
                      },
                      "required": [
                        "ownerId",
                        "itemType",
                        "itemId"
                      ]
                    },
                    "required": [
                      "mostRecentItemViewList"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Most recent story items are updated."
          }
        }
      }
    },
    "/eps/quickbuy-packages": {
      "get": {
        "summary": "Get quickbuy packages.",
        "parameters": [
          {
            "description": "User Session identifier",
            "in": "header",
            "name": "X-SESSION-ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site name",
            "in": "query",
            "name": "site",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Cobrand name",
            "in": "query",
            "name": "cobrand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Any extra information to be provided to the campaign. Commonly used for A/B testing ids.",
            "in": "query",
            "name": "campaignTags",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Force campaing name",
            "in": "query",
            "name": "forceCampaign",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "successCallbackUrl",
            "in": "query",
            "name": "successCallbackUrl",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "errorCallbackUrl",
            "in": "query",
            "name": "errorCallbackUrl",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "redirectCallbackUrl",
            "in": "query",
            "name": "redirectCallbackUrl",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "backwardCallbackUrl",
            "in": "query",
            "name": "backwardCallbackUrl",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Referral id in the AWE referral program",
            "in": "query",
            "name": "aweReferralId",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Referral id in the JSM1 referral program",
            "in": "query",
            "name": "referralId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Seo admin referer id ('refererq' from cookie)",
            "in": "query",
            "name": "refererq",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If given, this endpoint will return only the smallest package with enough credits.",
            "in": "query",
            "name": "requiredCredits",
            "required": false,
            "schema": {
              "type": "float",
              "example": 3.14
            }
          },
          {
            "description": "Returns with custom packages for the requested credits.",
            "in": "query",
            "name": "customCredits",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "float",
                "minimum": 27.99,
                "maximum": 10000
              },
              "example": [
                27.99,
                50,
                75,
                100,
                200,
                300,
                500,
                750,
                1000,
                2000,
                3000,
                5000
              ]
            }
          },
          {
            "description": "Platform name",
            "in": "query",
            "name": "platform",
            "required": false,
            "schema": {
              "type": "string",
              "default": "pc",
              "enum": [
                "pc",
                "mobile"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Available package list for user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "properties": {
                        "packages": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 261
                              },
                              "credit": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number",
                                    "example": 17.99
                                  },
                                  "extra": {
                                    "type": "number",
                                    "example": 10.99
                                  }
                                }
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "base": {
                                    "type": "number",
                                    "example": 10.11
                                  },
                                  "offered": {
                                    "type": "number",
                                    "example": 5.11
                                  },
                                  "currency": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "example": "EUR"
                                      },
                                      "symbol": {
                                        "type": "string",
                                        "example": "&euro;"
                                      }
                                    }
                                  }
                                }
                              },
                              "purchaseToken": {
                                "type": "string",
                                "example": "BCBGDADBBwvDJIIBBGJrJrABJDwtsDsJutGvsCvu"
                              },
                              "offer": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "doublecredit"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "0.1"
                                  },
                                  "formattedValue": {
                                    "type": "string",
                                    "example": "10"
                                  },
                                  "validTo": {
                                    "type": "string",
                                    "format": "date",
                                    "nullable": true
                                  }
                                }
                              },
                              "expireAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-09-08T09:39:00-04:00"
                              }
                            }
                          }
                        },
                        "paymentMethod": {
                          "properties": {
                            "is3dAuthenticationRequired": {
                              "type": "boolean",
                              "example": true
                            },
                            "windowType": {
                              "type": "string",
                              "nullable": true,
                              "enum": [
                                "iframe",
                                "popup"
                              ],
                              "example": "iframe"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Member QuickBuy packages are not avaialble or Member account could not be found"
          },
          "503": {
            "description": "Service unavailable"
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/eps/subscription-packages/{id}": {
      "get": {
        "summary": "Get subscription package.",
        "parameters": [
          {
            "description": "Package ID",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
        
          {
            "description": "serviceId",
            "in": "query",
            "name": "serviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested package.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "properties": {
                        "package": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "number",
                              "example": 10.11
                            },
                            "currency": {
                              "type": "string",
                              "example": "EUR"
                            },
                            "purchaseToken": {
                              "type": "string",
                              "example": "BCBGDADBBwvDJIIBBGJrJrABJDwtsDsJutGvsCvu"
                            }
                          }
                        }
                       
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Member account or package could not be found"
          },
          "503": {
            "description": "Service unavailable"
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/eps/transactions/{id}": {
      "post": {
        "summary": "Create an EPS Transaction (use it before secure redirection because of 3d secure challenge)",
        "parameters": [
         
        ],
        "responses": {
          "201": {
            "description": "Transaction created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    
                  },
                  "example": {
                    "data": {
                      "id": "wHGJAJGvHIGEGtEFrCFwBDGBuDBstBAusrFIwAtA",
                      "memberId": 123,
                      "status": {
                        "value": "pending",
                        "message": null
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Transaction already exists"
          }
        },
        "tags": [
          "Payment"
        ]
      },
      "get": {
        "summary": "Get EPS Transaction",
        "parameters": [
         
          {
            "description": "Purchase token id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 40,
              "maxLength": 40,
              "example": "wHGJAJGvHIGEGtEFrCFwBDGBuDBstBAusrFIwAtA"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gets a transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                       
                        "memberId": {
                          "type": "integer",
                          "example": [
                            123
                          ]
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "enum": [
                                "pending",
                                "completed",
                                "declined"
                              ],
                              "example": "declined"
                            },
                            "message": {
                              "type": "string",
                              "nullable": true,
                              "example": "Insufficient funds",
                              "enum": [
                                "Insufficient funds",
                                "Timeout",
                                "Do not honor",
                                "declined by turkish bank"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/eps/transactions/{id}/start": {
      "post": {
        "summary": "Start an EPS Transaction (use it when we don't need 3d secure challenge redirection)",
        "parameters": [
          
        ],
        "responses": {
          "201": {
            "description": "Transaction created and started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    
                  },
                  "example": {
                    "data": {
                      "id": "wHGJAJGvHIGEGtEFrCFwBDGBuDBstBAusrFIwAtA",
                      "memberId": 123,
                      "status": {
                        "value": "pending",
                        "message": null
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Transaction already exists"
          }
        },
        "tags": [
          "Payment"
        ]
      }
    },
    "/my-content/subscriptions/{postId}": {
      "post": {
        "summary": "Create a subscription for MyContent document.",
        "parameters": [
          {
            "description": "Package ID",
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Package ID",
            "in": "path",
            "name": "pos2tId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "My content"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documentId": {
                    "type": "string",
                    "required": true,
                    "example": "5acdcaa070522a5f630dcd24"
                  },
                  "domain": {
                    "type": "string",
                    "required": true,
                    "example": "www.livejasmin.com"
                  },
                  "cobrand": {
                    "type": "string",
                    "required": true,
                    "description": "Cobrand name or empty string.",
                    "example": "cobrand"
                  },
                  "siteId": {
                    "type": "string",
                    "required": true,
                    "example": "livejasmin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription was created."
          },
          "204": {
            "description": "Document not found."
          },
          "400": {
            "description": "Bad request."
          },
          "402": {
            "description": "Payment required."
          },
          "500": {
            "description": "Unkownn internal server error."
          }
        }
      }
    }
  },
  "host": "master-shared-dev-api-gateway-livejasmin.dhdevel.com"
}
