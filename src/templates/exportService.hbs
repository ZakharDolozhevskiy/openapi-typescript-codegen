{{>header}}

{{#if imports}}
{{#each imports}}
import type { {{{this}}} } from '../models/{{{this}}}';
{{/each}}
{{/if}}
{{#if @root.useVersion}}
import { OpenAPI } from '../core/OpenAPI';
{{/if}}

{{#each operations}}
    /**
    {{#if deprecated}}
        * @deprecated
    {{/if}}
    {{#if summary}}
        * {{{summary}}}
    {{/if}}
    {{#if description}}
        * {{{description}}}
    {{/if}}
    {{#if parameters}}
        {{#each parameters}}
            * @param request (url: string, options) => Promise
            * @param {{{name}}} {{{description}}}
        {{/each}}
    {{/if}}
    {{#each results}}
        * @result {{{type}}} {{{description}}}
    {{/each}}
    * @throws ApiError
    */
    const {{{name}}} = async (request, {{>parameters}}): Promise<{{>result}}> => {
    const params = {
        method: '{{{method}}}',
        {{#if parametersCookie}}
            cookies: {
            {{#each parametersCookie}}
                '{{{prop}}}': {{{name}}},
            {{/each}}
            },
        {{/if}}
        {{#if parametersHeader}}
            headers: {
            {{#each parametersHeader}}
                '{{{prop}}}': {{{name}}},
            {{/each}}
            },
        {{/if}}
        {{#if parametersQuery}}
            searchParams: {
            {{#each parametersQuery}}
                '{{{prop}}}': {{{name}}},
            {{/each}}
            },
        {{/if}}
        {{#if parametersForm}}
            formData: {
            {{#each parametersForm}}
                '{{{prop}}}': {{{name}}},
            {{/each}}
            },
        {{/if}}
        {{#if parametersBody}}
            body: {{{parametersBody.name}}},
        {{/if}}
        {{#if responseHeader}}
            responseHeader: '{{{responseHeader}}}',
        {{/if}}
        {{#if errors}}
            errors: {
            {{#each errors}}
                {{{code}}}: `{{{description}}}`,
            {{/each}}
            },
        {{/if}}
    }
    return request(`{{{path}}}`, params);
    }

{{/each}}
